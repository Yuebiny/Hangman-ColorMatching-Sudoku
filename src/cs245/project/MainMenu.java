/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cs245.project;

import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import static cs245.project.Splash.splashInit;
import static java.lang.Thread.sleep;
import java.util.Random;
import javax.swing.ImageIcon;

/**
 *
 * @author amnipp
 */
public class MainMenu extends javax.swing.JFrame {

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
        currentTime();
    }

    public void currentTime() {
        Thread clock = new Thread()
        {
                public void run()
                {
                    for(;;)
                    {
                        Calendar cal = new GregorianCalendar();
                        int second = cal.get(Calendar.SECOND);
                        int minute = cal.get(Calendar.MINUTE);
                        int hour = cal.get(Calendar.HOUR);
                        Clock.setText(hour + ": " + minute + ":  " + second);
                        try{
                            sleep(1000);
                        }
                        catch (Exception e)
                        {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
        };
        clock.start();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Play = new javax.swing.JButton();
        High_Score = new javax.swing.JButton();
        Credits = new javax.swing.JButton();
        Clock = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dark_trooper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        Play.setText("Play");
        Play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayActionPerformed(evt);
            }
        });
        getContentPane().add(Play);
        Play.setBounds(70, 350, 83, 23);

        High_Score.setText("High Score");
        High_Score.setToolTipText("");
        High_Score.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                High_ScoreActionPerformed(evt);
            }
        });
        getContentPane().add(High_Score);
        High_Score.setBounds(200, 350, 83, 23);

        Credits.setText("Credits");
        Credits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreditsActionPerformed(evt);
            }
        });
        getContentPane().add(Credits);
        Credits.setBounds(330, 350, 83, 23);

        Clock.setForeground(new java.awt.Color(153, 0, 0));
        Clock.setText("TIME");
        getContentPane().add(Clock);
        Clock.setBounds(460, 20, 70, 20);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Add Icon image here");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(60, 140, 120, 90);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Your escort has DIED, ");
        jLabel2.setAutoscrolls(true);
        jLabel2.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(10, 10, 130, 30);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("guess the extraction codeword to escape the trooper");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 30, 360, 20);

        dark_trooper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cs245/project/trooper_images/star-wars-backgrounds.png"))); // NOI18N
        getContentPane().add(dark_trooper);
        dark_trooper.setBounds(0, 0, 600, 400);

        setSize(new java.awt.Dimension(616, 439));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void PlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayActionPerformed
        // TODO add your handling code here:
        //Select a word
        /*String[] WORD_LIST = {"abstract", "cemetery", "nurse", "pharmacy", "climbing"};
        String selectedWord;
        int randIndex = new Random().nextInt(WORD_LIST.length+1);
        selectedWord = WORD_LIST[randIndex];*/
        HangMan hangman = new HangMan();
        MainMenu menu = new MainMenu();
        hangman.start();
        PlayScreen play = new PlayScreen(hangman);
        hangman.setPlayScreen(play);
        play.setVisible(true);
        menu.setVisible(false);
        this.dispose();
        
    }//GEN-LAST:event_PlayActionPerformed

    private void High_ScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_High_ScoreActionPerformed
        // TODO add your handling code here:
        HighScoreScreen highScore = new HighScoreScreen();
        MainMenu menu = new MainMenu();
        menu.setVisible(false);
        highScore.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_High_ScoreActionPerformed

    private void CreditsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreditsActionPerformed
        // TODO add your handling code here:
        MainMenu menu = new MainMenu();
        CreditsScreen credits = new CreditsScreen();
        menu.setVisible(false);
        credits.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_CreditsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        splashInit();

        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    Thread.sleep(3000);
                }
                catch(Exception e) {
                    
                }
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Clock;
    private javax.swing.JButton Credits;
    private javax.swing.JButton High_Score;
    private javax.swing.JButton Play;
    private javax.swing.JLabel dark_trooper;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
